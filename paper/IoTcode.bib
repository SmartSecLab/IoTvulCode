@misc{:guesslang,
  title = {Guesslang Documentation \textemdash{} {{Guesslang}} 2.2.2 Documentation},
  urldate = {2023-01-07},
  howpublished = {https://guesslang.readthedocs.io/en/latest/\#},
  file = {/Users/guru/Zotero/storage/D47SGTND/latest.html}
}

@article{:pst,
  title = {{{PST}}'s {{National}} Threat Assessment 2023},
  langid = {english},
  file = {/Users/guru/Zotero/storage/5HRUI4PL/PST's National threat assessment 2023.pdf}
}

@article{al-boghdady2022:idetect,
  title = {{{iDetect}} for Vulnerability Detection in Internet of Things Operating Systems Using Machine Learning},
  author = {{Al-Boghdady}, Abdullah and {El-Ramly}, Mohammad and Wassif, Khaled},
  year = {2022},
  month = oct,
  journal = {Scientific Reports},
  volume = {12},
  number = {1},
  pages = {17086},
  issn = {2045-2322},
  doi = {10.1038/s41598-022-21325-x},
  urldate = {2022-12-26},
  abstract = {Abstract             Internet of Things (IoT) 's devices are ubiquitous and operate in a heterogonous environment with potential security breaches. IoT Operating Systems (IoT OSs) are the backbone software for running such devices. If IoT OSs are vulnerable to security breaches, higher-level security measures may not help. This paper aims to use Machine Learning (ML) to create a tool called iDetect for detecting vulnerabilities in C/C++\,source code of IoT OSs. The source code for 16 releases of IoT OSs (RIOT, Contiki, FreeRTOS, Amazon FreeRTOS) and the Software Assurance Reference Dataset (SARD) were used to create a labeled dataset of vulnerable and benign code with the reference being the Common Weakness Enumeration (CWE) vulnerabilities present in IoT OSs. Studies showed that only a subset of CWEs is present in the C/C++\,source code of low-end IoT OSs.The labeled dataset was used to train three ML models for vulnerability detection: Random Forest (RF), Convolutional Neural Network (CNN), and Recurrent Neural Network (RNN). The three models were used independently and RF; compared to CNN and RNN, gave the highest accuracy during the testing phase for binary and multiclass classification. RF was chosen as iDetect's ML classifier. Further evaluation was done on an unseen dataset of 322 code snippets taken from TinyOS. iDetect achieved a macro-averaged F1 score (mF1) of 98.5\% and weighted-average~F1 score (wF1) of 98\% for multiclass classification, F1 score (F1) of 97.8\% for binary classification, and superior results compared to all three Static Analysis Tools (SATs) used to collect the training dataset.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/G4K85K7G/Al-Boghdady et al. - 2022 - iDetect for vulnerability detection in internet of.pdf}
}

@article{alnaeli2017:source,
  title = {Source {{Code Vulnerabilities}} in {{IoT Software Systems}}},
  author = {Alnaeli, Saleh Mohamed and Sarnowski, Melissa and Aman, Md Sayedul and Abdelgawad, Ahmed and Yelamarthi, Kumar},
  year = {2017},
  journal = {Advances in Science, Technology and Engineering Systems Journal},
  volume = {2},
  number = {3},
  pages = {1502--1507},
  issn = {24156698},
  doi = {10.25046/aj0203188},
  urldate = {2022-12-02},
  langid = {english},
  file = {/Users/guru/Zotero/storage/ZH9KMCW9/Alnaeli et al. - 2017 - Source Code Vulnerabilities in IoT Software System.pdf}
}

@inproceedings{bhandari2022:artificial,
  title = {Artificial {{Intelligence Enabled Middleware}} for {{Distributed Cyberattacks Detection}} in {{IoT-based Smart Environments}}},
  booktitle = {2022 {{IEEE International Conference}} on {{Big Data}} ({{Big Data}})},
  author = {Bhandari, Guru Prasad and Lyth, Andreas and Shalaginov, Andrii and Gr{\o}nli, Tor-Morten},
  year = {2022},
  month = dec,
  pages = {3023--3032},
  doi = {10.1109/BigData55660.2022.10020531},
  abstract = {The Internet of Things (IoT) in the world is drastically increasing to make environments more efficient, user-friendly, and automated. However, cyberattacks on these IoT devices continue to be a significant t hreat. I n t his a rticle, w e p ropose a novel Artificial Intelligence (AI)-based middleware and model for middleware to detect attacks in versatile Smart Environments. To assess the applicability of the proposed method, we designed four-step process for data-driven multi-agent malware and attack detection. The first s tep c orresponds w ith t he a ggregation of multi-level network traffic d ata f rom s everal I oT d evices s uch as Arduino, Rasberry Pi, NVIDIA Jetson devices, etc. In the second phase, different AI and Deep Learning models are applied for multi-level malware and attack classifications, a nd t he efficiency of the off-chip inferred AI model is evaluated with a motive to reduce the overhead and latency of the IoT components. In the third step, we deploy the different versions of the inferred model on our heterogeneous local smart environments. Finally, as the fourth step, the performance and concurrency testing in terms of electrical power, network bandwidth, and memory usage by the model is measured to check how efficient the Artificial Intelligence method is towards IoT cybersecurity for smart environments. The experimental results on the heterogeneous IoT malware and attack datasets inspected in this study suggest AI can be used as an effective tool to prevent the smart environment from cybersecurity threats.},
  keywords = {Artificial intelligence,Artificial Neural Networks,Big Data,Cybersecurity,Internet of Things,IoT security,Machine Learning,Malware,Malware and Attacks,Middleware,Power measurement,Smart Environments,Telecommunication traffic},
  file = {/Users/guru/Zotero/storage/2B5QFBAD/Bhandari et al. - 2022 - Artificial Intelligence Enabled Middleware for Dis.pdf;/Users/guru/Zotero/storage/M95WPT58/10020531.html}
}

@article{bhandari2023:distributed,
  title = {Distributed {{Deep Neural-Network-Based Middleware}} for {{Cyber-Attacks Detection}} in {{Smart IoT Ecosystem}}: {{A Novel Framework}} and {{Performance Evaluation Approach}}},
  shorttitle = {Distributed {{Deep Neural-Network-Based Middleware}} for {{Cyber-Attacks Detection}} in {{Smart IoT Ecosystem}}},
  author = {Bhandari, Guru and Lyth, Andreas and Shalaginov, Andrii and Gr{\o}nli, Tor-Morten},
  year = {2023},
  month = jan,
  journal = {Electronics},
  volume = {12},
  number = {2},
  pages = {298},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  issn = {2079-9292},
  doi = {10.3390/electronics12020298},
  urldate = {2023-02-06},
  abstract = {Cyberattacks always remain the major threats and challenging issues in the modern digital world. With the increase in the number of internet of things (IoT) devices, security challenges in these devices, such as lack of encryption, malware, ransomware, and IoT botnets, leave the devices vulnerable to attackers that can access and manipulate the important data, threaten the system, and demand ransom. The lessons from the earlier experiences of cyberattacks demand the development of the best-practices benchmark of cybersecurity, especially in modern Smart Environments. In this study, we propose an approach with a framework to discover malware attacks by using artificial intelligence (AI) methods to cover diverse and distributed scenarios. The new method facilitates proactively tracking network traffic data to detect malware and attacks in the IoT ecosystem. Moreover, the novel approach makes Smart Environments more secure and aware of possible future threats. The performance and concurrency testing of the deep neural network (DNN) model deployed in IoT devices are computed to validate the possibility of in-production implementation. By deploying the DNN model on two selected IoT gateways, we observed very promising results, with less than 30 kb/s increase in network bandwidth on average, and just a 2\% increase in CPU consumption. Similarly, we noticed minimal physical memory and power consumption, with 0.42 GB and 0.2 GB memory usage for NVIDIA Jetson and Raspberry Pi devices, respectively, and an average 13.5\% increase in power consumption per device with the deployed model. The ML models were able to demonstrate nearly 93\% of detection accuracy and 92\% f1-score on both utilized datasets. The result of the models shows that our framework detects malware and attacks in Smart Environments accurately and efficiently.},
  copyright = {http://creativecommons.org/licenses/by/3.0/},
  langid = {english},
  keywords = {artificial neural network,cybersecurity,internet of things,IoT security,machine learning,malware and attacks},
  file = {/Users/guru/Zotero/storage/UQH6GHUK/Bhandari et al. - 2023 - Distributed Deep Neural-Network-Based Middleware f.pdf}
}

@article{celik:sensitive,
  title = {Sensitive {{Information Tracking}} in {{Commodity IoT}}},
  author = {Celik, Z Berkay and Babun, Leonardo and Sikder, Amit K and Aksu, Hidayet and Tan, Gang and McDaniel, Patrick and Uluagac, A Selcuk},
  abstract = {Broadly defined as the Internet of Things (IoT), the growth of commodity devices that integrate physical processes with digital connectivity has had profound effects on society\textendash smart homes, personal monitoring devices, enhanced manufacturing and other IoT applications have changed the way we live, play, and work. Yet extant IoT platforms provide few means of evaluating the use (and potential avenues for misuse) of sensitive information. Thus, consumers and organizations have little information to assess the security and privacy risks these devices present. In this paper, we present SAINT, a static taint analysis tool for IoT applications. SAINT operates in three phases; (a) translation of platform-specific IoT source code into an intermediate representation (IR), (b) identifying sensitive sources and sinks, and (c) performing static analysis to identify sensitive data flows. We evaluate SAINT on 230 SmartThings market apps and find 138 (60\%) include sensitive data flows. In addition, we demonstrate SAINT on IOTBENCH, a novel open-source test suite containing 19 apps with 27 unique data leaks. Through this effort, we introduce a rigorously grounded framework for evaluating the use of sensitive information in IoT apps\textemdash and therein provide developers, markets, and consumers a means of identifying potential threats to security and privacy.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/ZJGSPS2Z/Celik et al. - Sensitive Information Tracking in Commodity IoT.pdf}
}

@misc{chen2023:diversevul,
  title = {{{DiverseVul}}: {{A New Vulnerable Source Code Dataset}} for {{Deep Learning Based Vulnerability Detection}}},
  shorttitle = {{{DiverseVul}}},
  author = {Chen, Yizheng and Ding, Zhoujie and Chen, Xinyun and Wagner, David},
  year = {2023},
  month = apr,
  number = {arXiv:2304.00409},
  eprint = {2304.00409},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.2304.00409},
  urldate = {2023-04-11},
  abstract = {We propose and release a new vulnerable source code dataset. We curate the dataset by crawling security issue websites, extracting vulnerability-fixing commits and source codes from the corresponding projects. Our new dataset contains 150 CWEs, 26,635 vulnerable functions, and 352,606 non-vulnerable functions extracted from 7,861 commits. Our dataset covers 305 more projects than all previous datasets combined. We show that increasing the diversity and volume of training data improves the performance of deep learning models for vulnerability detection. Combining our new dataset with previous datasets, we present an analysis of the challenges and promising research directions of using deep learning for detecting software vulnerabilities. We study 11 model architectures belonging to 4 families. Our results show that deep learning is still not ready for vulnerability detection, due to high false positive rate, low F1 score, and difficulty of detecting hard CWEs. In particular, we demonstrate an important generalization challenge for the deployment of deep learning-based models. However, we also identify hopeful future research directions. We demonstrate that large language models (LLMs) are the future for vulnerability detection, outperforming Graph Neural Networks (GNNs) with manual feature engineering. Moreover, developing source code specific pre-training objectives is a promising research direction to improve the vulnerability detection performance.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Cryptography and Security,Computer Science - Machine Learning,Computer Science - Software Engineering},
  file = {/Users/guru/Zotero/storage/Z6ITN9BT/Chen et al_2023_DiverseVul_.pdf;/Users/guru/Zotero/storage/FFNBDBZ2/2304.html}
}

@misc{cppcheck2.12021:tool,
  title = {A {{Tool}} for {{Static C}}/{{C}}++ {{Code Analysis}}},
  author = {Cppcheck2.1},
  year = {2021},
  urldate = {2023-01-07},
  howpublished = {https://cppcheck.sourceforge.io/},
  file = {/Users/guru/Zotero/storage/55VM4VFM/cppcheck.sourceforge.io.html}
}

@misc{dwheeler2021:flawfinder,
  title = {Flawfinder v. 2.0.11},
  author = {{dwheeler}},
  year = {2021},
  urldate = {2023-01-07},
  howpublished = {https://dwheeler.com/flawfinder/},
  file = {/Users/guru/Zotero/storage/284CX4YX/flawfinder.html}
}

@book{europeannetworkandinformationsecurityagency.2015:security,
  title = {Security and Resilience of Smart Home Environments: Good Practices and Recommendations.},
  shorttitle = {Security and Resilience of Smart Home Environments},
  author = {{European Network and Information Security Agency.}},
  year = {2015},
  publisher = {{Publications Office}},
  address = {{LU}},
  urldate = {2022-12-26},
  langid = {english},
  file = {/Users/guru/Zotero/storage/URX4TAKI/European Network and Information Security Agency. - 2015 - Security and resilience of smart home environments.pdf}
}

@article{gao2021:semantic,
  title = {Semantic {{Learning Based Cross-Platform Binary Vulnerability Search For IoT Devices}}},
  author = {Gao, Jian and Yang, Xin and Jiang, Yu and Song, Houbing and Choo, Kim-Kwang Raymond and Sun, Jiaguang},
  year = {2021},
  month = feb,
  journal = {IEEE Transactions on Industrial Informatics},
  volume = {17},
  number = {2},
  pages = {971--979},
  issn = {1551-3203, 1941-0050},
  doi = {10.1109/TII.2019.2947432},
  urldate = {2023-03-27},
  abstract = {The rapid development of Internet of Things (IoT) has triggered more security requirements than ever, especially in detecting vulnerabilities in various IoT devices. The widely used clone-based vulnerability search methods are effective on source code; however, their performance is limited in IoT binary search. In this article, we present IoTSeeker, a function semantic learning based vulnerability search approach for cross-platform IoT binary. First, we construct the function semantic graph to capture both the data flow and control flow information and encode lightweight semantic features of each basic block within the semantic graph as numerical vectors. Then, the embedding vector of the whole binary function is generated by feeding the numerical vectors of basic blocks to our customized semantics aware neural network model. Finally, the cosine distance of two embedding vectors is calculated to determine whether a binary function contains a known vulnerability. The experiments show that IoTSeeker outperforms the state-of-the-art approaches for identifying crossplatform IoT binary vulnerabilities. For example, compared to Gemini, IoTSeeker finds 12.68\% more vulnerabilities in the top-50 candidates, and improves the value of AUC for 8.23\%.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/L5BE5KUP/Gao et al. - 2021 - Semantic Learning Based Cross-Platform Binary Vuln.pdf}
}

@inproceedings{hanif2022:vulberta,
  title = {{{VulBERTa}}: {{Simplified Source Code Pre-Training}} for {{Vulnerability Detection}}},
  shorttitle = {{{VulBERTa}}},
  booktitle = {2022 {{International Joint Conference}} on {{Neural Networks}} ({{IJCNN}})},
  author = {Hanif, Hazim and Maffeis, Sergio},
  year = {2022},
  month = jul,
  pages = {1--8},
  issn = {2161-4407},
  doi = {10.1109/IJCNN55064.2022.9892280},
  abstract = {This paper presents VulBERTa, a deep learning approach to detect security vulnerabilities in source code. Our approach pre-trains a RoBERTa model with a custom tokenisation pipeline on real-world code from open-source C/C++ projects. The model learns a deep knowledge representation of the code syntax and semantics, which we leverage to train vulnerability detection classifiers. We evaluate our approach on binary and multi-class vulnerability detection tasks across several datasets (Vuldeepecker, Draper, REVEAL and muVuldeepecker) and benchmarks (CodeXGLUE and D2A). The evaluation results show that VulBERTa achieves state-of-the-art performance and outperforms existing approaches across different datasets, despite its conceptual simplicity, and limited cost in terms of size of training data and number of model parameters.},
  keywords = {Codes,Deep learning,Knowledge representation,Neural networks,Pipelines,Pre-training,Representation learning,Semantics,Software vulnerabilites,Syntactics,Training data,Vulnerability detection},
  file = {/Users/guru/Zotero/storage/VG45Z85M/Hanif_Maffeis_2022_VulBERTa_2022 International Joint Conference on Neural Networks (IJCNN).pdf}
}

@article{jagatheesaperumal2022:explainable,
  title = {Explainable {{AI}} over the {{Internet}} of {{Things}} ({{IoT}}): {{Overview}}, {{State-of-the-Art}} and {{Future Directions}}},
  shorttitle = {Explainable {{AI}} over the {{Internet}} of {{Things}} ({{IoT}})},
  author = {Jagatheesaperumal, Senthil Kumar and Pham, Quoc-Viet and Ruby, Rukhsana and Yang, Zhaohui and Xu, Chunmei and Zhang, Zhaoyang},
  year = {2022},
  journal = {IEEE Open Journal of the Communications Society},
  volume = {3},
  eprint = {2211.01036},
  primaryclass = {cs},
  pages = {2106--2136},
  issn = {2644-125X},
  doi = {10.1109/OJCOMS.2022.3215676},
  urldate = {2022-12-24},
  abstract = {Explainable Artificial Intelligence (XAI) is transforming the field of Artificial Intelligence (AI) by enhancing the trust of end-users in machines. As the number of connected devices keeps on growing, the Internet of Things (IoT) market needs to be trustworthy for the end-users. However, existing literature still lacks a systematic and comprehensive survey work on the use of XAI for IoT. To bridge this lacking, in this paper, we address the XAI frameworks with a focus on their characteristics and support for IoT. We illustrate the widely-used XAI services for IoT applications, such as security enhancement, Internet of Medical Things (IoMT), Industrial IoT (IIoT), and Internet of City Things (IoCT). We also suggest the implementation choice of XAI models over IoT systems in these applications with appropriate examples and summarize the key inferences for future works. Moreover, we present the cutting-edge development in edge XAI structures and the support of sixth-generation (6G) communication services for IoT applications, along with key inferences. In a nutshell, this paper constitutes the first holistic compilation on the development of XAI-based frameworks tailored for the demands of future IoT use cases.},
  archiveprefix = {arxiv},
  langid = {english},
  keywords = {B.4.1,B.4.2,Computer Science - Artificial Intelligence,Computer Science - Human-Computer Interaction,Computer Science - Machine Learning,I.6.3},
  file = {/Users/guru/Zotero/storage/D4USPY3S/Jagatheesaperumal et al. - 2022 - Explainable AI over the Internet of Things (IoT) .pdf}
}

@article{mathas2021:design,
  title = {On the {{Design}} of {{IoT Security}}: {{Analysis}} of {{Software Vulnerabilities}} for {{Smart Grids}}},
  shorttitle = {On the {{Design}} of {{IoT Security}}},
  author = {Mathas, Christos-Minas and Vassilakis, Costas and Kolokotronis, Nicholas and Zarakovitis, Charilaos C. and Kourtis, Michail-Alexandros},
  year = {2021},
  month = may,
  journal = {Energies},
  volume = {14},
  number = {10},
  pages = {2818},
  issn = {1996-1073},
  doi = {10.3390/en14102818},
  urldate = {2022-12-26},
  abstract = {The 5G communication network will underpin a vast number of new and emerging services, paving the way for unprecedented performance and capabilities in mobile networks. In this setting, the Internet of Things (IoT) will proliferate, and IoT devices will be included in many 5G application contexts, including the Smart Grid. Even though 5G technology has been designed by taking security into account, design provisions may be undermined by software-rooted vulnerabilities in IoT devices that allow threat actors to compromise the devices, demote confidentiality, integrity and availability, and even pose risks for the operation of the power grid critical infrastructures. In this paper, we assess the current state of the vulnerabilities in IoT software utilized in smart grid applications from a source code point of view. To that end, we identified and analyzed open-source software that is used in the power grid and the IoT domain that varies in characteristics and functionality, ranging from operating systems to communication protocols, allowing us to obtain a more complete view of the vulnerability landscape. The results of this study can be used in the domain of software development, to enhance the security of produced software, as well as in the domain of automated software testing, targeting improvements to vulnerability detection mechanisms, especially with a focus on the reduction of false positives.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/XNF6TKVT/Mathas et al. - 2021 - On the Design of IoT Security Analysis of Softwar.pdf}
}

@inproceedings{naeem2020:identifying,
  title = {Identifying {{Vulnerable IoT Applications}} Using {{Deep Learning}}},
  booktitle = {2020 {{IEEE}} 27th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Naeem, Hajra and Alalfi, Manar H.},
  year = {2020},
  month = feb,
  pages = {582--586},
  publisher = {{IEEE}},
  address = {{London, ON, Canada}},
  doi = {10.1109/SANER48275.2020.9054817},
  urldate = {2023-03-27},
  abstract = {This paper presents an approach for the identification of vulnerable IoT applications using deep learning algorithms. The approach focuses on a category of vulnerabilities that leads to sensitive information leakage which can be identified using taint flow analysis. First, we analyze the source code of IoT apps in order to recover tokens along their frequencies and tainted flows. Second, we develop, Token2Vec, which transforms the source code tokens into vectors. We have also developed Flow2Vec, which transforms the identified tainted flows into vectors. Third, we use the recovered vectors to train a deep learning algorithm to build a model for the identification of tainted apps. We have evaluated the approach on two datasets and the experiments show that the proposed approach of combining tainted flows features with the base benchmark that uses token frequencies only, has improved the accuracy of the prediction models from 77.78\% to 92.59\% for Corpus1 and 61.11\% to 87.03\% for Corpus2.},
  isbn = {978-1-72815-143-4},
  langid = {english},
  file = {/Users/guru/Zotero/storage/SDRAB8RL/Naeem and Alalfi - 2020 - Identifying Vulnerable IoT Applications using Deep.pdf}
}

@article{nazzal2022:automated,
  title = {An {{Automated Approach}} for {{Privacy Leakage Identification}} in {{IoT Apps}}},
  author = {Nazzal, Bara' and Alalfi, Manar H.},
  year = {2022},
  journal = {IEEE Access},
  volume = {10},
  pages = {80727--80747},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2022.3192562},
  urldate = {2023-03-27},
  abstract = {This paper presents a fully automated static analysis approach and a tool, Taint-Things, for the identification of tainted flows in SmartThings IoT apps. Taint-Things accurately identifies all tainted flows reported by one of the state-of-the-art tools with at least 4 times improved performance. Our approach reports potential vulnerable tainted flows in a form of a concise security slice, where the relevant parts of the code are given with the lines affecting the sensitive information, which could provide security auditors with an effective and precise tool to pinpoint security issues in SmartThings apps under test. We also present and test ways to add precision to Taint-Things by adding extra sensitivities; we provide different approaches for flow, path and context sensitive analyses through modules that can be added to Taint-Things. We present experiments to evaluate Taint-Things by running it on a SmartThings app dataset as well as testing for precision and recall on a set generated by a mutation framework to see how much coverage is achieved without adding false positives. This shows an improvement in performance both in terms of speed up to 4 folds, as well as improving the precision avoiding false positives by providing a higher level of flow and path sensitivity analysis in comparison with one of state of the art tools.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/NPV2M67F/Nazzal and Alalfi - 2022 - An Automated Approach for Privacy Leakage Identifi.pdf}
}

@inproceedings{nong2022:generating,
  title = {Generating Realistic Vulnerabilities via Neural Code Editing: An Empirical Study},
  shorttitle = {Generating Realistic Vulnerabilities via Neural Code Editing},
  booktitle = {Proceedings of the 30th {{ACM Joint European Software Engineering Conference}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}},
  author = {Nong, Yu and Ou, Yuzhe and Pradel, Michael and Chen, Feng and Cai, Haipeng},
  year = {2022},
  month = nov,
  pages = {1097--1109},
  publisher = {{ACM}},
  address = {{Singapore Singapore}},
  doi = {10.1145/3540250.3549128},
  urldate = {2023-01-23},
  abstract = {The availability of large-scale, realistic vulnerability datasets is essential both for benchmarking existing techniques and for developing effective new data-driven approaches for software security. Yet such datasets are critically lacking. A promising solution is to generate such datasets by injecting vulnerabilities into real-world programs, which are richly available. Thus, in this paper, we explore the feasibility of vulnerability injection through neural code editing. With a synthetic dataset and a real-world one, we investigate the potential and gaps of three state-of-the-art neural code editors for vulnerability injection. We find that the studied editors have critical limitations on the real-world dataset, where the best accuracy is only 10.03\%, versus 79.40\% on the synthetic dataset. While the graph-based editors are more effective (successfully injecting vulnerabilities in up to 34.93\% of real-world testing samples) than the sequence-based one (0 success), they still suffer from complex code structures and fall short for long edits due to their insufficient designs of the preprocessing and deep learning (DL) models. We reveal the promise of neural code editing for generating realistic vulnerable samples, as they help boost the effectiveness of DL-based vulnerability detectors by up to 49.51\% in terms of F1 score. We also provide insights into the gaps in current editors (e.g., they are good at deleting but not at replacing code) and actionable suggestions for addressing them (e.g., designing effective editing primitives).},
  isbn = {978-1-4503-9413-0},
  langid = {english},
  file = {/Users/guru/Zotero/storage/EHB4IHW9/Nong et al. - 2022 - Generating realistic vulnerabilities via neural co.pdf}
}

@misc{oracle2023:what,
  title = {What Is the {{Internet}} of {{Things}} ({{IoT}})?},
  author = {Oracle},
  year = {2023},
  urldate = {2023-01-19},
  abstract = {Physical objects are embedded with sensors, software, and other technologies for the purpose of connecting and exchanging data with other devices and systems, ranging from ordinary household objects to sophisticated industrial tools.},
  howpublished = {https://www.oracle.com/internet-of-things/what-is-iot/},
  langid = {english},
  file = {/Users/guru/Zotero/storage/XUMTQNMW/what-is-iot.html}
}

@article{pico-valencia2018:agentification,
  title = {Agentification of the {{Internet}} of {{Things}}: {{A}} Systematic Literature Review},
  shorttitle = {Agentification of the {{Internet}} of {{Things}}},
  author = {{Pico-Valencia}, Pablo and {Holgado-Terriza}, Juan A},
  year = {2018},
  month = oct,
  journal = {International Journal of Distributed Sensor Networks},
  volume = {14},
  number = {10},
  pages = {155014771880594},
  issn = {1550-1477, 1550-1477},
  doi = {10.1177/1550147718805945},
  urldate = {2022-12-23},
  abstract = {The Internet of Things is aimed at controlling the physical real world using a global network of heterogeneous smart objects that are interconnected through the Internet. Nonetheless, this emergent paradigm still poses challenges in terms of intelligence, autonomy, security, privacy, and interoperability, all of which must be overcome in order for this approach to be consolidated. The integration of Internet of Things with agent technologies has been proposed as an alternative. In this article, we present a general overview of the main preliminary models, theoretical and experimental studies, and applications currently proposed to carry out the agentification of the Internet of Things through modeling smart objects and networks of Internet of Things objects using software agents. Furthermore, we present an analysis of the main strengths, opportunities, weaknesses, and threats of this approach in terms of computational intelligence. Finally, we discuss the main challenges that must be overcome in order for the agentification process of the Internet of Things to become a consolidated paradigm to build cognitive Internet of Things applications.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/EYNJRD27/Pico-Valencia and Holgado-Terriza - 2018 - Agentification of the Internet of Things A system.pdf}
}

@misc{rats2021:rough,
  title = {Rough {{Auditing Tool}} for {{Security}}},
  author = {RATS},
  year = {2021},
  urldate = {2023-01-07},
  howpublished = {https://security.web.cern.ch/recommendations/en/codetools/rats.shtml},
  file = {/Users/guru/Zotero/storage/D8R59PRW/rats.html}
}

@article{stirbu2022:continuous,
  title = {Continuous Design Control for Machine Learning in Certified Medical Systems},
  author = {Stirbu, Vlad and Granlund, Tuomas and Mikkonen, Tommi},
  year = {2022},
  month = oct,
  journal = {Software Quality Journal},
  issn = {0963-9314, 1573-1367},
  doi = {10.1007/s11219-022-09601-5},
  urldate = {2023-03-26},
  abstract = {Continuous software engineering has become commonplace in numerous fields. However, in regulating intensive sectors, where additional concerns need to be taken into account, it is often considered difficult to apply continuous development approaches, such as devops. In this paper, we present an approach for using pull requests as design controls, and apply this approach to machine learning in certified medical systems leveraging model cards, a novel technique developed to add explainability to machine learning systems, as a regulatory audit trail. The approach is demonstrated with an industrial system that we have used previously to show how medical systems can be developed in a continuous fashion.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/ICJDK8VH/Stirbu et al. - 2022 - Continuous design control for machine learning in .pdf}
}

@article{swessi2022:survey,
  title = {A {{Survey}} on {{Internet-of-Things Security}}: {{Threats}} and {{Emerging Countermeasures}}},
  shorttitle = {A {{Survey}} on {{Internet-of-Things Security}}},
  author = {Swessi, Dorsaf and Idoudi, Hanen},
  year = {2022},
  month = may,
  journal = {Wireless Personal Communications},
  volume = {124},
  number = {2},
  pages = {1557--1592},
  issn = {0929-6212, 1572-834X},
  doi = {10.1007/s11277-021-09420-0},
  urldate = {2023-03-27},
  abstract = {Internet of things (IoT) is a world wide network and set of paradigms that are intended to allow communications between anything, anytime and anywhere. However, connected objects are in most cases vulnerable due to their constrained resources and the inherent IoT environment conditions, basically, the dynamic aspect, the heterogeneity, and the open and wireless medium of communication. Securing the IoT networks is still an open and challenging issue and the majority of traditional security mechanisms designed so far for Internet doesn't satisfy IoT security requirements. Recently, the use of emergent technologies such as Artificial Intelligence mechanisms, Blockchain and IoTA as a promising solutions to solve security and privacy problems has shown a yield remarkable performance. In this paper we outline the security requirements proposed for the IoT. We provide a comprehensive taxonomy of the major security issues based on IoT architecture, attack implications and application areas. Furthermore, we tabulate and map the different countermeasures used to solve these threats taking into account new advances in security approaches. Finally, we discuss and compare the enumerated countermeasures for IoT security.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/AEAJR4AQ/Swessi and Idoudi - 2022 - A Survey on Internet-of-Things Security Threats a.pdf}
}

@article{tran:systematic,
  title = {A {{Systematic Literature Review}} on {{Secure IoT Data Sharing}}},
  author = {Tran, Thanh Thao Thi},
  abstract = {Objectives: In this project, we aim at identifying existing approaches and techniques in the state-of-the-art (SotA) of secure IoT data sharing. Method: To conduct a systematic literature review, we employ the most recent and widely used guidelines. In addition, we examine the SotA and the state of practice, then we synthesize the collected data, and finally present and discuss our findings. Results: The extraction of data has led to a number of findings on our topic. In addition to revealing the most addressed domains, our high-level results and statistical numbers emphasize the publication increase and trends as well. We did, however, obtain more in-depth information on the procedures and methods used to preserve security in the data sharing environment. Using blockchain technology and smart contracts, as well as the InterPlanetary File System (IPFS), a decentralized peer-topeer storage system, are among them. These and other important discoveries do all contribute to an increase in secure IoT data sharing. Conclusions: There are several points to consider based on the statistical data and discussion of the outcomes, as today's solutions move away from a centralized strategy and towards a more decentralized approach. Based on our findings, we have identified potential research directions for future work in order to establish the most trustworthy environment for secure IoT data sharing. This might involve the combination of sharing and analytics, with the goal of determining whether receiving already processed data or unprocessed raw data makes a difference to stakeholders in the IoT ecosystem. As the statistics show that blockchain technology is widely employed to establish a decentralized solution, it might be useful to research whether there are any significant variations between the blockchain platforms in what they can contribute or if there are any limitations. To summarize, the journey toward secure IoT data sharing has come a long way, and the security of data sharing will improve as research on the topic keeps growing.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/J8XLAFP6/Tran - A Systematic Literature Review on Secure IoT Data .pdf}
}

@inproceedings{ulloa2021:systematic,
  title = {Systematic {{Literature Review}} of {{Internet}} of {{Things Solutions Oriented}} to {{People}} with {{Physical}} and {{Intellectual Disabilities}}:},
  shorttitle = {Systematic {{Literature Review}} of {{Internet}} of {{Things Solutions Oriented}} to {{People}} with {{Physical}} and {{Intellectual Disabilities}}},
  booktitle = {Proceedings of the 7th {{International Conference}} on {{Information}} and {{Communication Technologies}} for {{Ageing Well}} and E-{{Health}}},
  author = {Ulloa, Max and {Prado-Cabrera}, Daniela and Cedillo, Priscila},
  year = {2021},
  pages = {228--235},
  publisher = {{SCITEPRESS - Science and Technology Publications}},
  address = {{Online Streaming, --- Select a Country ---}},
  doi = {10.5220/0010480902280235},
  urldate = {2022-12-22},
  abstract = {Disability, Internet of Things, IoT, Physical, Intellectual, Cognitive.},
  isbn = {978-989-758-506-7},
  langid = {english},
  file = {/Users/guru/Zotero/storage/XB7KKPA7/Ulloa et al. - 2021 - Systematic Literature Review of Internet of Things.pdf}
}

@article{wang2022:bugpre,
  title = {{{BugPre}}: An Intelligent Software Version-to-Version Bug Prediction System Using Graph Convolutional Neural Networks},
  shorttitle = {{{BugPre}}},
  author = {Wang, Zixu and Tong, Weiyuan and Li, Peng and Ye, Guixin and Chen, Hao and Gong, Xiaoqing and Tang, Zhanyong},
  year = {2022},
  month = aug,
  journal = {Complex \& Intelligent Systems},
  issn = {2199-4536, 2198-6053},
  doi = {10.1007/s40747-022-00848-w},
  urldate = {2023-03-26},
  abstract = {Since defects in software may cause product fault and financial loss, it is essential to conduct software defect prediction (SDP) to identify the potentially defective modules, especially in the early stage of the software development lifecycle. Recently, cross-version defect prediction (CVDP) began to draw increasing research interests, employing the labeled defect data of the prior version within the same project to predict defects in the current version. As software development is a dynamic process, the data distribution (such as defects) during version change may get changed. Recent studies utilize machine learning (ML) techniques to detect software defects. However, due to the close dependencies between the updated and unchanged code, prior ML-based methods fail to model the long and deep dependencies, causing a high false positive. Furthermore, traditional defect detection is performed on the entire project, and the detection efficiency is relatively low, especially on large-scale software projects. To this end, we propose BugPre, a CVDP approach to address these two issues. BugPre is a novel framework that only conducts efficient defect prediction on changed modules in the current version. BugPre utilizes variable propagation tree-based associated analysis method to obtain the changed modules in the current version. Besides, BugPre constructs graph leveraging code context dependences and uses a graph convolutional neural network to learn representative characteristics of code, thereby improving defect prediction capability when version changes occur. Through extensive experiments on opensource Apache projects, the experimental results indicate that our BugPre outperforms three state-of-the-art defect detection approaches, and the F1-score has increased by higher than 16\%.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/95YDQI7A/Wang et al. - 2022 - BugPre an intelligent software version-to-version.pdf}
}

@article{wu2022:code,
  title = {Code {{Vulnerability Detection Based}} on {{Deep Sequence}} and {{Graph Models}}: {{A Survey}}},
  shorttitle = {Code {{Vulnerability Detection Based}} on {{Deep Sequence}} and {{Graph Models}}},
  author = {Wu, Bolun and Zou, Futai},
  editor = {Yan, Xuehu},
  year = {2022},
  month = oct,
  journal = {Security and Communication Networks},
  volume = {2022},
  pages = {1--11},
  issn = {1939-0122, 1939-0114},
  doi = {10.1155/2022/1176898},
  urldate = {2023-03-27},
  abstract = {With the flourishing of the open-source software community, the problem of software vulnerabilities is becoming more and more serious. Hence, it is urgent to come up with an effective and efficient code vulnerability detection method. Source code vulnerability detection techniques used in practice today like symbolic execution and fuzz testing suffer from high false positives and low code coverage, respectively. Traditional machine-learning-based solutions fail to cope with the diversity of vulnerabilities. To overcome these drawbacks, a large number of deep-learning-based code vulnerability detection works have emerged, aiming at building powerful neural network models to fully learn code semantics and vulnerability patterns. In this survey, we mainly focus on code vulnerability detection approaches based on deep sequence modeling and graph modeling technologies. Our goal is to investigate how these two methods are applied to facilitate code vulnerability detection. We also go over current prevailing datasets that are used to evaluate detection models. At last, we identify the current challenges in this field and share our views on future work.},
  langid = {english},
  file = {/Users/guru/Zotero/storage/SPR82T27/Wu and Zou - 2022 - Code Vulnerability Detection Based on Deep Sequenc.pdf}
}
