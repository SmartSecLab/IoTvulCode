
## Core latex/pdflatex auxiliary files:
*.aux
*.lof
*.log
*.lot
*.fls
*.out
*.toc
*.fmt
*.fot
*.cb
*.cb2
.*.lb

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bcf
*.blg
*-blx.aux
*-blx.bib
*.run.xml


## Build tool auxiliary files:
*.fdb_latexmk
*.synctex
*.synctex(busy)
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
*.tmp
# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

.idea
.vscode
.neptune 

## Project supplimentary dirs/files
.gitattributes
.neptune.ini
data/cve-2022.csv
data/cve-records.csv
data/json/
data/projects/
data/nvdcve-1.1-2022.json
data/nvdcve-1.1-2022.json.zip
data/output-tunslip.csv
paper/IoT vulnerability.zip
notebooks/contiki24_cppcheck.csv
notebooks/latin_file.c
notebooks/output.xml
notebooks/rats.csv
notebooks/rats.xml
notes.txt
test.py
result
IoTcode.db
configuration.yaml
data/cve/
data/processed/contiki-master_Binary.csv
data/processed/contiki-master_Binary1.csv
data/processed/contiki-master_flaw.csv
data/processed/contiki-master_metrics-VulBERT.csv
data/processed/contiki-master_metrics.csv
data/processed/output-tunslip.csv
data/processed/raspberryZip_function-VulBERT.csv
data/processed/raspberryZip_function.csv
data/processed/raspberryZip_statement.csv
data/processed/raspberry_flaw.csv
data/processed/raspberry_metrics.csv
data/raw/
data/test/
data/iDetect/
infer.py
notebooks/figure/
pytests/
dvclive
figure/train-acc.png
figure/train-loss.png
figure/train-precision.png
figure/train-recall.png
figure/val-acc.png
figure/val-loss.png
figure/val-precision.png
figure/val-recall.png
figure/vul_statistics.pdf
Makefile-local
VulBERTa/
dvc_plots
data/classes.pkl